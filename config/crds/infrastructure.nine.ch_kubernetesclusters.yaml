---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  name: kubernetesclusters.infrastructure.nine.ch
spec:
  group: infrastructure.nine.ch
  names:
    kind: KubernetesCluster
    listKind: KubernetesClusterList
    plural: kubernetesclusters
    shortNames:
    - kc
    singular: kubernetescluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KubernetesCluster is a fully managed Kubernetes cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A KubernetesClusterSpec defines the desired state of a KubernetesCluster.
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: KubernetesClusterParameters are the configurable fields
                  of a KubernetesCluster.
                properties:
                  additionalBackupSchedules:
                    description: AdditionalBackupSchedules allows custom backup schedules
                      to be setup. The daily full cluster backup won't be affected
                      by this.
                    items:
                      description: VeleroSchedule defines a Velero backup schedule.
                      properties:
                        cronExpression:
                          description: 'CronExpression is a POSIX cron expression
                            defining when to run the backup. For example every night
                            at 3 am UTC: "0 3 * * *". Note that it does not allow
                            to configure a backup to run every minute, meaning the
                            first term of the expression (minute) has to be a number.'
                          pattern: ^(\d+)(\d+)?(\s+(\d+|\*)(\d+)?){4}$
                          type: string
                        name:
                          description: Name of the backup schedule
                          type: string
                        spec:
                          description: Spec defines what to back up and how long to
                            retain it
                          properties:
                            csiSnapshotTimeout:
                              description: CSISnapshotTimeout specifies the time used
                                to wait for CSI VolumeSnapshot status turns to ReadyToUse
                                during creation, before returning error as timeout.
                                The default value is 10 minute.
                              type: string
                            defaultVolumesToFsBackup:
                              description: DefaultVolumesToFsBackup specifies whether
                                pod volume file system backup should be used for all
                                volumes by default.
                              nullable: true
                              type: boolean
                            defaultVolumesToRestic:
                              description: "DefaultVolumesToRestic specifies whether
                                restic should be used to take a backup of all pod
                                volumes by default. \n Deprecated: this field is no
                                longer used and will be removed entirely in future.
                                Use DefaultVolumesToFsBackup instead."
                              nullable: true
                              type: boolean
                            excludedNamespaces:
                              description: ExcludedNamespaces contains a list of namespaces
                                that are not included in the backup.
                              items:
                                type: string
                              nullable: true
                              type: array
                            excludedResources:
                              description: ExcludedResources is a slice of resource
                                names that are not included in the backup.
                              items:
                                type: string
                              nullable: true
                              type: array
                            hooks:
                              description: Hooks represent custom behaviors that should
                                be executed at different phases of the backup.
                              properties:
                                resources:
                                  description: Resources are hooks that should be
                                    executed when backing up individual instances
                                    of a resource.
                                  items:
                                    description: BackupResourceHookSpec defines one
                                      or more BackupResourceHooks that should be executed
                                      based on the rules defined for namespaces, resources,
                                      and label selector.
                                    properties:
                                      excludedNamespaces:
                                        description: ExcludedNamespaces specifies
                                          the namespaces to which this hook spec does
                                          not apply.
                                        items:
                                          type: string
                                        nullable: true
                                        type: array
                                      excludedResources:
                                        description: ExcludedResources specifies the
                                          resources to which this hook spec does not
                                          apply.
                                        items:
                                          type: string
                                        nullable: true
                                        type: array
                                      includedNamespaces:
                                        description: IncludedNamespaces specifies
                                          the namespaces to which this hook spec applies.
                                          If empty, it applies to all namespaces.
                                        items:
                                          type: string
                                        nullable: true
                                        type: array
                                      includedResources:
                                        description: IncludedResources specifies the
                                          resources to which this hook spec applies.
                                          If empty, it applies to all resources.
                                        items:
                                          type: string
                                        nullable: true
                                        type: array
                                      labelSelector:
                                        description: LabelSelector, if specified,
                                          filters the resources to which this hook
                                          spec applies.
                                        nullable: true
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      name:
                                        description: Name is the name of this hook.
                                        type: string
                                      post:
                                        description: PostHooks is a list of BackupResourceHooks
                                          to execute after storing the item in the
                                          backup. These are executed after all "additional
                                          items" from item actions are processed.
                                        items:
                                          description: BackupResourceHook defines
                                            a hook for a resource.
                                          properties:
                                            exec:
                                              description: Exec defines an exec hook.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    and arguments to execute.
                                                  items:
                                                    type: string
                                                  minItems: 1
                                                  type: array
                                                container:
                                                  description: Container is the container
                                                    in the pod where the command should
                                                    be executed. If not specified,
                                                    the pod's first container is used.
                                                  type: string
                                                onError:
                                                  description: OnError specifies how
                                                    Velero should behave if it encounters
                                                    an error executing this hook.
                                                  enum:
                                                  - Continue
                                                  - Fail
                                                  type: string
                                                timeout:
                                                  description: Timeout defines the
                                                    maximum amount of time Velero
                                                    should wait for the hook to complete
                                                    before considering the execution
                                                    a failure.
                                                  type: string
                                              required:
                                              - command
                                              type: object
                                          required:
                                          - exec
                                          type: object
                                        type: array
                                      pre:
                                        description: PreHooks is a list of BackupResourceHooks
                                          to execute prior to storing the item in
                                          the backup. These are executed before any
                                          "additional items" from item actions are
                                          processed.
                                        items:
                                          description: BackupResourceHook defines
                                            a hook for a resource.
                                          properties:
                                            exec:
                                              description: Exec defines an exec hook.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    and arguments to execute.
                                                  items:
                                                    type: string
                                                  minItems: 1
                                                  type: array
                                                container:
                                                  description: Container is the container
                                                    in the pod where the command should
                                                    be executed. If not specified,
                                                    the pod's first container is used.
                                                  type: string
                                                onError:
                                                  description: OnError specifies how
                                                    Velero should behave if it encounters
                                                    an error executing this hook.
                                                  enum:
                                                  - Continue
                                                  - Fail
                                                  type: string
                                                timeout:
                                                  description: Timeout defines the
                                                    maximum amount of time Velero
                                                    should wait for the hook to complete
                                                    before considering the execution
                                                    a failure.
                                                  type: string
                                              required:
                                              - command
                                              type: object
                                          required:
                                          - exec
                                          type: object
                                        type: array
                                    required:
                                    - name
                                    type: object
                                  nullable: true
                                  type: array
                              type: object
                            includeClusterResources:
                              description: IncludeClusterResources specifies whether
                                cluster-scoped resources should be included for consideration
                                in the backup.
                              nullable: true
                              type: boolean
                            includedNamespaces:
                              description: IncludedNamespaces is a slice of namespace
                                names to include objects from. If empty, all namespaces
                                are included.
                              items:
                                type: string
                              nullable: true
                              type: array
                            includedResources:
                              description: IncludedResources is a slice of resource
                                names to include in the backup. If empty, all resources
                                are included.
                              items:
                                type: string
                              nullable: true
                              type: array
                            labelSelector:
                              description: LabelSelector is a metav1.LabelSelector
                                to filter with when adding individual objects to the
                                backup. If empty or nil, all objects are included.
                                Optional.
                              nullable: true
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            metadata:
                              properties:
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                              type: object
                            orLabelSelectors:
                              description: OrLabelSelectors is list of metav1.LabelSelector
                                to filter with when adding individual objects to the
                                backup. If multiple provided they will be joined by
                                the OR operator. LabelSelector as well as OrLabelSelectors
                                cannot co-exist in backup request, only one of them
                                can be used.
                              items:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              nullable: true
                              type: array
                            orderedResources:
                              additionalProperties:
                                type: string
                              description: OrderedResources specifies the backup order
                                of resources of specific Kind. The map key is the
                                resource name and value is a list of object names
                                separated by commas. Each resource name has format
                                "namespace/objectname".  For cluster resources, simply
                                use "objectname".
                              nullable: true
                              type: object
                            snapshotVolumes:
                              description: SnapshotVolumes specifies whether to take
                                cloud snapshots of any PV's referenced in the set
                                of objects included in the Backup.
                              nullable: true
                              type: boolean
                            storageLocation:
                              description: StorageLocation is a string containing
                                the name of a BackupStorageLocation where the backup
                                should be stored.
                              type: string
                            ttl:
                              description: TTL is a time.Duration-parseable string
                                describing how long the Backup should be retained
                                for.
                              type: string
                            volumeSnapshotLocations:
                              description: VolumeSnapshotLocations is a list containing
                                names of VolumeSnapshotLocations associated with this
                                backup.
                              items:
                                type: string
                              type: array
                          type: object
                      required:
                      - cronExpression
                      - name
                      - spec
                      type: object
                    maxItems: 3
                    type: array
                  location:
                    description: Location of the KubernetesCluster. Note that Clusters
                      are currently only available in the location nine-es34.
                    enum:
                    - nine-cz41
                    - nine-cz42
                    - nine-es34
                    type: string
                  nke:
                    description: NKE represents a KubernetesCluster in Nine's datacentres.
                    properties:
                      staticEgress:
                        description: StaticEgress defines settings for the static
                          egress feature
                        properties:
                          enabled:
                            default: false
                            description: Enabled defines if the static egress feature
                              should be enabled or disabled
                            type: boolean
                        type: object
                    type: object
                  nodePools:
                    items:
                      description: NodePool configures a pool of nodes which are added
                        to the cluster.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations specifies the node annotations.
                            Changing this results in a new rollout of all nodes in
                            the pool.
                          type: object
                        diskSize:
                          anyOf:
                          - type: integer
                          - type: string
                          default: 20Gi
                          description: DiskSize specifies the size of the disk for
                            the nodes in this pool. Changing this results in a new
                            rollout of all nodes in the pool. Allowed range is 20Gi
                            - 100Gi.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels specifies the node labels. Changing
                            this results in a new rollout of all nodes in the pool.
                          type: object
                        machineType:
                          description: MachineType identifies the machine sizing.
                            Changing this results in a new rollout of all nodes in
                            the pool.
                          enum:
                          - nine-standard-1
                          - nine-standard-2
                          - nine-standard-4
                          - nine-highmem-2
                          - nine-highmem-4
                          - nine-highcpu-2
                          - nine-highcpu-4
                          - nine-highcpu-8
                          - nine-highcpu-16
                          type: string
                        maxNodes:
                          description: MinNodes describes the upper bound of nodes
                            in this pool. If MinNodes == MaxNodes, autoscaling is
                            disabled.
                          minimum: 1
                          type: integer
                        minNodes:
                          description: MinNodes describes the lower bound of nodes
                            in this pool. If MinNodes == MaxNodes, autoscaling is
                            disabled.
                          minimum: 0
                          type: integer
                        name:
                          description: Name of the node pool. Changing this results
                            in a new rollout of all nodes in the pool.
                          type: string
                        taints:
                          description: Taints specifies the node taints. Changing
                            this results in a new rollout of all nodes in the pool.
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: The taint value corresponding to the
                                  taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                      required:
                      - machineType
                      - maxNodes
                      - minNodes
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  scrapeConfiguration:
                    description: ScrapeConfigurations allows to overwrite which metrics
                      of this cluster are scraped by certain Prometheus instances
                    properties:
                      certManager:
                        items:
                          description: ScrapeConfig configures a metrics scrape config.
                          properties:
                            additionalMetrics:
                              description: AdditionalMetrics specifies which additional
                                metrics should be scraped from this exporter
                              items:
                                type: string
                              type: array
                            allMetrics:
                              default: false
                              description: AllMetrics specifies that all metrics of
                                this specific component should be scraped
                              type: boolean
                            enabled:
                              default: true
                              description: Enabled specifies if metrics of a corresponding
                                exporter should be scraped by certain Prometheus instances
                              type: boolean
                            name:
                              description: Name uniquely identifies an ExporterScrapeConfig.
                              type: string
                            scrapedBy:
                              description: ScrapedBy defines which prometheus instances
                                will target this scrape config.
                              items:
                                description: LocalReference references another object
                                  in the same namespace.
                                properties:
                                  name:
                                    description: Name of the target.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      kubeStateMetrics:
                        items:
                          description: ScrapeConfig configures a metrics scrape config.
                          properties:
                            additionalMetrics:
                              description: AdditionalMetrics specifies which additional
                                metrics should be scraped from this exporter
                              items:
                                type: string
                              type: array
                            allMetrics:
                              default: false
                              description: AllMetrics specifies that all metrics of
                                this specific component should be scraped
                              type: boolean
                            enabled:
                              default: true
                              description: Enabled specifies if metrics of a corresponding
                                exporter should be scraped by certain Prometheus instances
                              type: boolean
                            name:
                              description: Name uniquely identifies an ExporterScrapeConfig.
                              type: string
                            scrapedBy:
                              description: ScrapedBy defines which prometheus instances
                                will target this scrape config.
                              items:
                                description: LocalReference references another object
                                  in the same namespace.
                                properties:
                                  name:
                                    description: Name of the target.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      kubelet:
                        items:
                          description: ScrapeConfig configures a metrics scrape config.
                          properties:
                            additionalMetrics:
                              description: AdditionalMetrics specifies which additional
                                metrics should be scraped from this exporter
                              items:
                                type: string
                              type: array
                            allMetrics:
                              default: false
                              description: AllMetrics specifies that all metrics of
                                this specific component should be scraped
                              type: boolean
                            enabled:
                              default: true
                              description: Enabled specifies if metrics of a corresponding
                                exporter should be scraped by certain Prometheus instances
                              type: boolean
                            name:
                              description: Name uniquely identifies an ExporterScrapeConfig.
                              type: string
                            scrapedBy:
                              description: ScrapedBy defines which prometheus instances
                                will target this scrape config.
                              items:
                                description: LocalReference references another object
                                  in the same namespace.
                                properties:
                                  name:
                                    description: Name of the target.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      kubeletCAdvisor:
                        items:
                          description: ScrapeConfig configures a metrics scrape config.
                          properties:
                            additionalMetrics:
                              description: AdditionalMetrics specifies which additional
                                metrics should be scraped from this exporter
                              items:
                                type: string
                              type: array
                            allMetrics:
                              default: false
                              description: AllMetrics specifies that all metrics of
                                this specific component should be scraped
                              type: boolean
                            enabled:
                              default: true
                              description: Enabled specifies if metrics of a corresponding
                                exporter should be scraped by certain Prometheus instances
                              type: boolean
                            name:
                              description: Name uniquely identifies an ExporterScrapeConfig.
                              type: string
                            scrapedBy:
                              description: ScrapedBy defines which prometheus instances
                                will target this scrape config.
                              items:
                                description: LocalReference references another object
                                  in the same namespace.
                                properties:
                                  name:
                                    description: Name of the target.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      nodeExporter:
                        items:
                          description: ScrapeConfig configures a metrics scrape config.
                          properties:
                            additionalMetrics:
                              description: AdditionalMetrics specifies which additional
                                metrics should be scraped from this exporter
                              items:
                                type: string
                              type: array
                            allMetrics:
                              default: false
                              description: AllMetrics specifies that all metrics of
                                this specific component should be scraped
                              type: boolean
                            enabled:
                              default: true
                              description: Enabled specifies if metrics of a corresponding
                                exporter should be scraped by certain Prometheus instances
                              type: boolean
                            name:
                              description: Name uniquely identifies an ExporterScrapeConfig.
                              type: string
                            scrapedBy:
                              description: ScrapedBy defines which prometheus instances
                                will target this scrape config.
                              items:
                                description: LocalReference references another object
                                  in the same namespace.
                                properties:
                                  name:
                                    description: Name of the target.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      velero:
                        items:
                          description: ScrapeConfig configures a metrics scrape config.
                          properties:
                            additionalMetrics:
                              description: AdditionalMetrics specifies which additional
                                metrics should be scraped from this exporter
                              items:
                                type: string
                              type: array
                            allMetrics:
                              default: false
                              description: AllMetrics specifies that all metrics of
                                this specific component should be scraped
                              type: boolean
                            enabled:
                              default: true
                              description: Enabled specifies if metrics of a corresponding
                                exporter should be scraped by certain Prometheus instances
                              type: boolean
                            name:
                              description: Name uniquely identifies an ExporterScrapeConfig.
                              type: string
                            scrapedBy:
                              description: ScrapedBy defines which prometheus instances
                                will target this scrape config.
                              items:
                                description: LocalReference references another object
                                  in the same namespace.
                                properties:
                                  name:
                                    description: Name of the target.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                  vcluster:
                    description: VCluster is a virtual KubernetesCluster running on
                      top of NKE. Experimental and should only be used for development
                      and testing.
                    properties:
                      certManager:
                        description: CertManager enables cert-manager on the vcluster.
                          Currently just Certificate resources are supported.
                        type: boolean
                      version:
                        default: "1.28"
                        description: Version specifies the Kubernetes version that
                          will be used for this cluster, e.g. "1.26". The patch version
                          cannot be specified and the latest supported one will be
                          used.
                        enum:
                        - "1.25"
                        - "1.26"
                        - "1.27"
                        - "1.28"
                        - "1.29"
                        type: string
                        x-kubernetes-validations:
                        - message: downgrade is not allowed
                          rule: double(self) >= double(oldSelf)
                        - message: only one minor upgrade is allowed
                          rule: double(self) - double(oldSelf) < 0.02
                    type: object
                required:
                - location
                - nodePools
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A KubernetesClusterStatus represents the observed state of
              a KubernetesCluster.
            properties:
              atProvider:
                description: KubernetesClusterObservation are the observable fields
                  of a KubernetesCluster.
                properties:
                  apiCACert:
                    description: APICACert is the base64 encoded ca certificate of
                      the kube-apiserver
                    type: string
                  apiEndpoint:
                    description: APIEndpoint is the URL under which the Kubernetes
                      API is reachable at.
                    type: string
                  childResourceErrors:
                    description: ChildResourceErrors of a managed resource.
                    items:
                      description: ChildResourceError is an error that occurred on
                        a child resource of a managed resource.
                      properties:
                        message:
                          description: Message that describes why the resource failed.
                          type: string
                        resource:
                          description: Resource references the child resource that
                            errored.
                          properties:
                            name:
                              description: Name of the target.
                              type: string
                            namespace:
                              description: Namespace of the target.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        type:
                          description: Type specifies the type of the resource.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            version:
                              type: string
                          required:
                          - group
                          - kind
                          - version
                          type: object
                      required:
                      - message
                      - resource
                      - type
                      type: object
                    type: array
                  kubernetesVersion:
                    description: KubernetesVersion is the version of Kubernetes that
                      this cluster is running.
                    type: string
                  nodePools:
                    additionalProperties:
                      properties:
                        diskSize:
                          anyOf:
                          - type: integer
                          - type: string
                          description: DiskSize shows the current disk size of the
                            node pool.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        machineType:
                          description: MachineType shows the current machine type
                            of the node pool.
                          enum:
                          - nine-standard-1
                          - nine-standard-2
                          - nine-standard-4
                          - nine-highmem-2
                          - nine-highmem-4
                          - nine-highcpu-2
                          - nine-highcpu-4
                          - nine-highcpu-8
                          - nine-highcpu-16
                          type: string
                        numNodes:
                          description: NumNodes describes the current number of nodes
                            in the node pool.
                          type: integer
                      required:
                      - numNodes
                      type: object
                    description: NodePools lists the name of the node pools plus their
                      associated status.
                    type: object
                  oidcClientID:
                    description: OIDCClientID is the client ID for the OIDC login
                      flow to this cluster.
                    type: string
                  oidcIssuerURL:
                    description: OIDCIssuerURL is the issuer URL for the OIDC login
                      flow to this cluster.
                    type: string
                  vcluster:
                    description: VCluster exposes vcluster specific status fields.
                    properties:
                      defaultIngress:
                        description: DefaultIngress that Ingress objects within the
                          vcluster can use.
                        properties:
                          class:
                            description: Class is the name of the IngressClass that
                              can be referenced within an Ingress resource.
                            type: string
                          host:
                            description: Host is the fully qualified hostname that
                              points to the Ingress Loadbalancer.
                            type: string
                        required:
                        - class
                        - host
                        type: object
                    required:
                    - defaultIngress
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
