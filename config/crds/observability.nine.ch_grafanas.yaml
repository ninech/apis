---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  name: grafanas.observability.nine.ch
spec:
  group: observability.nine.ch
  names:
    kind: Grafana
    listKind: GrafanaList
    plural: grafanas
    singular: grafana
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Grafana deploys a fully managed Grafana instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An GrafanaSpec defines the desired state of a Grafana.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: GrafanaParameters are the configurable fields of a Grafana.
                properties:
                  dataSource:
                    description: DataSource defines search parameters for DataSources.
                    properties:
                      filterLabels:
                        additionalProperties:
                          type: string
                        description: FilterLabels is a list of labels that will be
                          filtered for when searching for data sources.
                        type: object
                      searchNamespaces:
                        description: SearchNamespaces is a list of namespaces that
                          will be searched for data sources that will be added to
                          the Grafana deployment. If empty, the default is to search
                          in the same namespace that Grafana resides in.
                        items:
                          type: string
                        type: array
                    type: object
                required:
                - dataSource
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: An GrafanaStatus represents the observed state of a Grafana.
            properties:
              atProvider:
                description: GrafanaObservation are the observable fields of a Grafana.
                properties:
                  childResourceErrors:
                    description: ChildResourceErrors of a managed resource.
                    items:
                      description: ChildResourceError is an error that occurred on
                        a child resource of a managed resource.
                      properties:
                        message:
                          description: Message that describes why the resource failed.
                          type: string
                        resource:
                          description: Resource references the child resource that
                            errored.
                          properties:
                            name:
                              description: Name of the target.
                              type: string
                            namespace:
                              description: Namespace of the target.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        type:
                          description: Type specifies the type of the resource.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            version:
                              type: string
                          required:
                          - group
                          - kind
                          - version
                          type: object
                      required:
                      - message
                      - resource
                      - type
                      type: object
                    type: array
                  url:
                    description: URL where Grafana can be accessed.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - atProvider
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
