---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: projectconfigs.apps.nine.ch
spec:
  group: apps.nine.ch
  names:
    kind: ProjectConfig
    listKind: ProjectConfigList
    plural: projectconfigs
    singular: projectconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A ProjectConfig defines the default config of an application
          in a project.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An ProjectConfigSpec defines the desired state of a ProjectConfig.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ProjectConfigParameters are the configurable fields of
                  a ProjectConfig.
                properties:
                  config:
                    description: Config contains all parameters configuring the deployment
                      of an Application.
                    properties:
                      deployJobs:
                        description: DeployJob defines a command which is executed
                          before a new release gets deployed. The deployment will
                          only continue if the job finished successfully.
                        nullable: true
                        properties:
                          command:
                            description: Command to execute. This command will be
                              executed by a bash shell which gets started by the cloud
                              native buildpacks launcher binary.
                            type: string
                          name:
                            description: Name of the Job.
                            type: string
                          retries:
                            default: 0
                            description: Retries defines how many times the job will
                              be restarted on failure.
                            format: int32
                            type: integer
                          timeout:
                            default: 5m
                            description: Timeout of the job. Minimum is 1 minute and
                              maximum is 30 minutes.
                            format: duration
                            type: string
                        required:
                        - command
                        - name
                        type: object
                      enableBasicAuth:
                        description: EnableBasicAuth enables basic authentication
                          for the application
                        nullable: true
                        type: boolean
                      env:
                        description: Env variables which are passed to the app at
                          runtime.
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      port:
                        description: Port the app is listening on.
                        format: int32
                        nullable: true
                        type: integer
                      replicas:
                        description: Replicas sets the amount of replicas of the running
                          app. If this is increased, make sure your application can
                          cope with running multiple replicas and all state required
                          is shared in some way.
                        format: int32
                        nullable: true
                        type: integer
                      size:
                        default: ""
                        description: ApplicationSize defines the size of an application
                          and the resources that will be allocated for it.
                        enum:
                        - ""
                        - micro
                        - mini
                        - standard-1
                        - standard-2
                        type: string
                    type: object
                required:
                - config
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: An ProjectConfigStatus represents the observed state of a
              ProjectConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
