---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  name: cloudvirtualmachines.infrastructure.nine.ch
spec:
  group: infrastructure.nine.ch
  names:
    kind: CloudVirtualMachine
    listKind: CloudVirtualMachineList
    plural: cloudvirtualmachines
    shortNames:
    - cloudvm
    singular: cloudvirtualmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.atProvider.powerState
      name: POWERSTATE
      type: string
    - jsonPath: .status.atProvider.ipAddress
      name: IP
      type: string
    - jsonPath: .status.atProvider.fqdn
      name: FQDN
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          CloudVirtualMachine is a virtual machine instance providing flexible scaling and a
          variety of Linux distributions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CloudVirtualMachineSpec defines the desired state of a cloud
              VM.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: CloudVirtualMachineParameters are the configurable fields
                  of a CloudVirtualMachine.
                properties:
                  bootDisk:
                    default:
                      name: root
                      size: 20Gi
                    description: BootDisk that will be used to boot the VM from.
                    properties:
                      name:
                        description: |-
                          Name specifies the name of the disk. Used to identify a disk, changing
                          the name of a disk means the old disk will be deleted and a new one
                          will be created.
                        type: string
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Size specifies the disk size.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - name
                    - size
                    type: object
                  cloudConfig:
                    description: |-
                      CloudConfig allows to pass custom cloud config data (https://cloudinit.readthedocs.io/en/latest/topics/format.html#cloud-config-data)
                      to the cloud VM. If a CloudConfig is passed, the PublicKey parameter is ignored.
                    type: string
                    x-kubernetes-validations:
                    - message: Cloud Config is immutable after creation
                      rule: self == oldSelf
                  disks:
                    description: Disks specifies which additional disks to mount to
                      the machine.
                    items:
                      description: Disk describes a Disk that can be attached to a
                        VM.
                      properties:
                        name:
                          description: |-
                            Name specifies the name of the disk. Used to identify a disk, changing
                            the name of a disk means the old disk will be deleted and a new one
                            will be created.
                          type: string
                        size:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Size specifies the disk size.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      required:
                      - name
                      - size
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  hostname:
                    description: |-
                      Hostname allows to set the hostname explicitly. If unset, the name
                      of the resource will be used as the hostname. This does not affect
                      the DNS name.
                    type: string
                    x-kubernetes-validations:
                    - message: Hostname is immutable after creation
                      rule: self == oldSelf
                  location:
                    description: |-
                      Location specifies in which datacenter the VM will be spawned.
                      Needs to match the available MachineTypes in that datacenter.
                    enum:
                    - nine-cz41
                    - nine-cz42
                    - nine-es34
                    type: string
                  machineType:
                    default: nine-standard-1
                    description: MachineType defines the sizing for a particular cloud
                      vm.
                    enum:
                    - nine-standard-1
                    - nine-standard-2
                    - nine-standard-4
                    - nine-highmem-2
                    - nine-highmem-4
                    - nine-highcpu-2
                    - nine-highcpu-4
                    - nine-highcpu-8
                    - nine-db-xs
                    - nine-db-s
                    - nine-db-m
                    - nine-db-l
                    - nine-db-xl
                    - nine-db-xxl
                    - nine-small-1
                    type: string
                  os:
                    default: ubuntu24.04
                    description: OS which should be used to boot the VM.
                    enum:
                    - ubuntu20.04
                    - ubuntu22.04
                    - ubuntu24.04
                    - rocky9
                    - debian12
                    type: string
                    x-kubernetes-validations:
                    - message: OS is immutable after creation
                      rule: self == oldSelf
                  powerState:
                    default: "on"
                    description: |-
                      PowerState specifies the power state of the cloud VM. A value of
                      "On" turns the VM on, shutdown sends an ACPI signal to the VM to
                      perform a clean shutdown and off forces the power off immediately.
                    enum:
                    - "on"
                    - shutdown
                    - "off"
                    type: string
                  publicKeys:
                    description: |-
                      PublicKeys specifies the SSH Public Keys that can be used to connect to
                      the VM as root. The keys are expected to be in SSH format as defined in
                      RFC4253.
                    items:
                      type: string
                    type: array
                    x-kubernetes-validations:
                    - message: Public Key is immutable after creation
                      rule: self == oldSelf
                  rescue:
                    description: |-
                      Rescue configures booting into a rescue live-OS for fixing a VM that is
                      in an unbootable state.
                    properties:
                      enabled:
                        description: |-
                          Enable enables booting into rescue. This will trigger an immediate
                          reboot of the VM into a rescue live-OS. Set this to false to configure
                          boot from the root disk again.
                        type: boolean
                      publicKeys:
                        description: |-
                          PublicKeys specifies additional SSH Public Keys that can be used to
                          connect to the rescue OS as root. The keys are expected to be in SSH
                          format as defined in RFC4253. If not specified, just the PublicKeys
                          from the parameters will be used.
                        items:
                          type: string
                        type: array
                    required:
                    - enabled
                    type: object
                required:
                - location
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CloudVirtualMachineStatus represents the observed state of
              a cloud VM.
            properties:
              atProvider:
                description: CloudVirtualMachineObservation are the observable fields
                  of a cloud VM.
                properties:
                  childResourceErrors:
                    description: ChildResourceErrors of a managed resource.
                    items:
                      description: |-
                        ChildResourceError is an error that occurred on a child resource of
                        a managed resource.
                      properties:
                        message:
                          description: Message that describes why the resource failed.
                          type: string
                        resource:
                          description: Resource references the child resource that
                            errored.
                          properties:
                            name:
                              description: Name of the target.
                              type: string
                            namespace:
                              description: Namespace of the target.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        type:
                          description: Type specifies the type of the resource.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            version:
                              type: string
                          required:
                          - group
                          - kind
                          - version
                          type: object
                      required:
                      - message
                      - resource
                      - type
                      type: object
                    type: array
                  fqdn:
                    description: FQDN is the fully qualified domain name at which
                      the VM is reachable at.
                    type: string
                  ipAddress:
                    description: IPAddress is the public IPAddress for the VM.
                    type: string
                  powerState:
                    description: PowerState indicates the observed power state of
                      the VM.
                    type: string
                  uuid:
                    description: UUID of the underlying virtual machine.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            required:
            - atProvider
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
