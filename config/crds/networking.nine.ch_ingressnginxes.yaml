---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  name: ingressnginxes.networking.nine.ch
spec:
  group: networking.nine.ch
  names:
    kind: IngressNginx
    listKind: IngressNginxList
    plural: ingressnginxes
    shortNames:
    - nginx
    singular: ingressnginx
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressNginx deploys an NGINX ingress controller to a cluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IngressNginxSpec defines the desired state of an IngressNginx.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: IngressNginxParameters are the configurable fields of
                  a IngressNginx.
                properties:
                  annotationValueWordBlocklist:
                    description: |-
                      AnnotationValueWordBlocklist is a list of comma separated words
                      which, if found in snippet annotations, will block the acceptance of
                      the ingress resource. This allows to block nginx configuration stanzas
                      which are potentially dangerous in a multitenant use case of the
                      ingress controller while still allowing snippet annotations to be
                      made.

                      The suggested list of the ingress-nginx project is:
                      "load_module,lua_package,_by_lua,location,root,proxy_pass,serviceaccount,{,},',\""

                      It is still recommended to disable snippet annotations in general
                      (see disableSnippetAnnotations) when using this ingress-nginx in a
                      multitenant scenario.
                    type: string
                  appendToXForwardedFor:
                    default: false
                    description: |-
                      AppendToXForwardedFor defines if the ingress should take the incoming
                      X-Forwarded-For header and append IPs to it, instead of replacing the
                      whole header.
                      Do NOT use this option in combination with Cloudflare enabled
                      as this will break client IP detection.
                    type: boolean
                  cache:
                    description: |-
                      Cache defines caching settings. If set, the cache will be enabled and
                      use the default settings. If not set, the cache will not be enabled.
                      Caching also needs to be enabled on the ingress resource by setting a
                      server-snippet annotation like this:

                        nginx.ingress.kubernetes.io/server-snippet: |
                          proxy_cache mycache;
                          proxy_cache_lock on;
                          proxy_cache_valid any 60m;
                          proxy_ignore_headers Cache-Control;
                          add_header X-Cache-Status $upstream_cache_status;
                    properties:
                      key:
                        default: $scheme$proxy_host$request_uri
                        description: Key defines the key that is used to index the
                          nginx cache.
                        type: string
                    type: object
                  cloudflare:
                    description: |-
                      Cloudflare defines the settings for having Cloudflare as a CDN in
                      front of this Ingress Controller.
                      Do NOT use this option in combination with the `AppendToXForwardedFor`
                      variable as this will break client IP detection.
                      Disabled if not set.
                    properties:
                      ips:
                        default:
                        - 173.245.48.0/20
                        - 103.21.244.0/22
                        - 103.22.200.0/22
                        - 103.31.4.0/22
                        - 141.101.64.0/18
                        - 108.162.192.0/18
                        - 190.93.240.0/20
                        - 188.114.96.0/20
                        - 197.234.240.0/22
                        - 198.41.128.0/17
                        - 162.158.0.0/15
                        - 104.16.0.0/13
                        - 104.24.0.0/14
                        - 172.64.0.0/13
                        - 131.0.72.0/22
                        description: IPs is a list of CIDRs which should contain all
                          Cloudflare Networks.
                        items:
                          type: string
                        type: array
                    type: object
                  cluster:
                    description: Cluster specifies on which cluster this IngressNginx
                      should be installed.
                    properties:
                      name:
                        description: Name of the target.
                        type: string
                    required:
                    - name
                    type: object
                  defaultBackend:
                    description: |-
                      DefaultBackend sets the default backend that the ingress will proxy to
                      if the request does not match any configured ingress route. If
                      disabled, nginx will just return a generic 404 for such requests.
                    properties:
                      defaultBackendImage:
                        default:
                          registry: registry.k8s.io
                          repository: defaultbackend-amd64
                          tag: "1.5"
                        description: |-
                          Image sets the image that is used for the backend pods. These are
                          responsible for returning HTTP error pages in case of a failure in the
                          service that an ingress resource points to.
                        properties:
                          digest:
                            description: Digest specifies the image digest to use
                            type: string
                          pullPolicy:
                            default: Always
                            description: PullPolicy specifies the image pull policy
                              to use
                            type: string
                          pullSecret:
                            description: PullSecret specifies a image pull secret
                              name
                            type: string
                          registry:
                            description: |-
                              Registry specifies the registry from where the image should
                              be pulled
                            type: string
                          repository:
                            description: |-
                              Repository specifies the repository from where the image should
                              be pulled
                            type: string
                          tag:
                            description: Tag specifies the image tag to use
                            type: string
                        type: object
                      defaultBackendReplicas:
                        default: 2
                        description: Replicas sets the number of replicas for the
                          default backend.
                        type: integer
                    type: object
                  disableSnippetAnnotations:
                    default: false
                    description: |-
                      DisableSnippetAnnotations disables all "*-snippet" annotations (like
                      "configuration-snippet" or "server-snippet") on ingress resources.
                      These annotations are potentially dangerous in an environment where
                      you do not trust all your users (multitenant environments). For
                      example, it might allow to see the generated nginx.conf file.
                    type: boolean
                  enableModSecurity:
                    default: false
                    description: |-
                      EnableModSecurity enables the owasp-modsecurity. Note this will enable
                      it for all paths, and each path must be disabled manually. ModSecurity
                      will run in "Detection-Only" mode using the recommended configuration.
                      You can enable the OWASP Core Rule Set by setting the following
                      annotation:

                      nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"

                      https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md#modsecurity
                    type: boolean
                  hsts:
                    description: |-
                      HSTS allows to configure settings for the "HTTP Strict Transport
                      Security" (HSTS) headers
                    properties:
                      enabled:
                        description: |-
                          Enabled enables/disables all HSTS headers. If not given all HSTS
                          headers are enabled by default.
                        type: boolean
                      includeSubdomains:
                        description: |-
                          IncludeSubdomains allows to toggle the "includeSubDomains" field in
                          the HSTS header (enabled by default).
                        type: boolean
                      maxAge:
                        description: |-
                          MaxAge sets the time that the browser should remember that this site
                          is only to be accessed using HTTPS.
                        type: string
                      preload:
                        description: Preload allows to toggle the HSTS preload feature.
                        type: boolean
                    type: object
                  ingressClass:
                    default: nginx
                    description: |-
                      IngressClass sets the class of the ingress controller. Specifies which
                      ingress objects the controller should take care of. Please note that
                      the class `nginx` itself will handle all ingresses without a class
                      annotation set.
                    type: string
                  ipSharing:
                    description: |-
                      IPSharing enables sharing the IP address of the ingress LB with an
                      existing service type LoadBalancer. The reference should point to the
                      service with which the LB IP should be shared. The referenced service
                      has to have the annotation metallb.universe.tf/allow-shared-ip set and
                      the ports 80 and 443 cannot be already in use.
                    properties:
                      name:
                        description: Name of the target.
                        type: string
                      namespace:
                        description: Namespace of the target.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  isDefaultIngressClass:
                    default: false
                    description: |-
                      IsDefaultIngressClass specifies if the IngressClass of this controller
                      should be the default IngressClass in the target cluster.
                    type: boolean
                  scrapeConfigurations:
                    description: |-
                      ScrapeConfigurations allows to overwrite which metrics of the ingress-nginx
                      instance are scraped by certain Prometheus instances.
                    items:
                      description: ScrapeConfig configures a metrics scrape config.
                      properties:
                        additionalMetrics:
                          description: |-
                            AdditionalMetrics specifies which additional
                            metrics should be scraped from this exporter
                          items:
                            type: string
                          type: array
                        allMetrics:
                          default: false
                          description: |-
                            AllMetrics specifies that all metrics of this
                            specific component should be scraped
                          type: boolean
                        enabled:
                          default: true
                          description: |-
                            Enabled specifies if metrics of a corresponding
                            exporter should be scraped by certain Prometheus
                            instances
                          type: boolean
                        name:
                          description: Name uniquely identifies an ExporterScrapeConfig.
                          type: string
                        scrapedBy:
                          description: |-
                            ScrapedBy defines which prometheus instances will
                            target this scrape config.
                          items:
                            description: LocalReference references another object
                              in the same namespace.
                            properties:
                              name:
                                description: Name of the target.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                  sslPassthrough:
                    default: false
                    description: |-
                      SSLPassthrough flag enables the SSL Passthrough feature, which is
                      disabled by default. This is required to enable passthrough backends in
                      ingress objects. This feature is implemented by intercepting all
                      traffic on the configured HTTPS port (default: 443) and handing it over
                      to a local TCP proxy. This bypasses NGINX completely and introduces a
                      non-negligible performance penalty.
                    type: boolean
                required:
                - cluster
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: IngressNginxStatus represents the observed state of an IngressNginx.
            properties:
              atProvider:
                description: IngressNginxObservation are the observable fields of
                  an IngressNginx.
                properties:
                  childResourceErrors:
                    description: ChildResourceErrors of a managed resource.
                    items:
                      description: |-
                        ChildResourceError is an error that occurred on a child resource of
                        a managed resource.
                      properties:
                        message:
                          description: Message that describes why the resource failed.
                          type: string
                        resource:
                          description: Resource references the child resource that
                            errored.
                          properties:
                            name:
                              description: Name of the target.
                              type: string
                            namespace:
                              description: Namespace of the target.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        type:
                          description: Type specifies the type of the resource.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            version:
                              type: string
                          required:
                          - group
                          - kind
                          - version
                          type: object
                      required:
                      - message
                      - resource
                      - type
                      type: object
                    type: array
                  dnsName:
                    description: DNSName is the name of the ingress A-Record, pointing
                      to IPAddress.
                    type: string
                  ipAddress:
                    description: IPAddress is the address where the ingress controller
                      is reachable.
                    type: string
                  ipSharingError:
                    description: IPSharingError indicates errors with the IPSharing
                      configuration.
                    type: string
                  referenceErrors:
                    items:
                      properties:
                        kind:
                          type: string
                        message:
                          type: string
                        name:
                          description: Name of the target.
                          type: string
                        namespace:
                          description: Namespace of the target.
                          type: string
                      required:
                      - kind
                      - message
                      - name
                      - namespace
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            required:
            - atProvider
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
